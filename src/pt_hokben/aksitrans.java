/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pt_hokben;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pt_hokben.koneksi;

import java.time.LocalDateTime ;
import java.time.format.DateTimeFormatter ;
/**
 *
 * @author E6530
 */
public class aksitrans extends javax.swing.JFrame {

   
    /**
     * Creates new form aksitrans
     */
    public aksitrans() {
        initComponents();
        listMakanan();
        listPengantar();
        listKendaraan();
        listJarak();
        idPesanan();
        loadPesanan();
        statusPesanan();
        dateTime();
        idTransaksi.setEnabled(false);
         delete.setEnabled(false);
        // update.setEnabled(false);
         reset.setEnabled(false);
         harga_jarak.setEnabled(false);
         harga_makan.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idTransaksi = new javax.swing.JTextField();
        nama = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        alamat = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pesanan = new javax.swing.JTable();
        update = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        listMakanan = new javax.swing.JComboBox<>();
        listKendaraan = new javax.swing.JComboBox<>();
        listPengantar = new javax.swing.JComboBox<>();
        save = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jarak = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        harga_jarak = new javax.swing.JTextField();
        jmlbayar = new javax.swing.JLabel();
        harga_makan = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        utilitas = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Delivery System PT Eka Boga Inti");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(220, 10, 560, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/delivery-guy.png"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(786, 12, 64, 64);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel14.setText("Merk Kendaraan");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(20, 380, 90, 30);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/background-hitam-kuning.jpg"))); // NOI18N
        jPanel1.add(jLabel18);
        jLabel18.setBounds(10, 0, 950, 837);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(-7, 0, 920, 80);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Input Transaksi");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(21, 100, 90, 14);
        getContentPane().add(idTransaksi);
        idTransaksi.setBounds(140, 150, 211, 30);
        getContentPane().add(nama);
        nama.setBounds(140, 188, 211, 30);

        alamat.setColumns(20);
        alamat.setRows(5);
        jScrollPane1.setViewportView(alamat);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(140, 226, 211, 63);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("ID");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(21, 154, 90, 14);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Nama Pemesan");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(21, 192, 81, 14);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("Alamat");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(21, 226, 38, 14);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("Nama Makanan");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(21, 307, 84, 14);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("Nama Pengantar");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(20, 350, 88, 14);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setText("Jarak Tempuh");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(20, 420, 90, 30);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel10.setText("Status");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(20, 580, 34, 30);

        pesanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pesanan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pesananMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(pesanan);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(369, 150, 532, 140);

        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/updated.png"))); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(624, 310, 110, 40);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/deliv 2.png"))); // NOI18N
        getContentPane().add(jLabel11);
        jLabel11.setBounds(730, 420, 128, 128);

        listMakanan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Makanan" }));
        listMakanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listMakananActionPerformed(evt);
            }
        });
        getContentPane().add(listMakanan);
        listMakanan.setBounds(140, 300, 211, 30);

        listKendaraan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Kendaraan" }));
        listKendaraan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listKendaraanActionPerformed(evt);
            }
        });
        getContentPane().add(listKendaraan);
        listKendaraan.setBounds(140, 380, 211, 30);

        listPengantar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Pengantar" }));
        listPengantar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listPengantarActionPerformed(evt);
            }
        });
        getContentPane().add(listPengantar);
        listPengantar.setBounds(140, 340, 211, 30);

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/diskette.png"))); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save);
        save.setBounds(510, 310, 110, 40);

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset);
        reset.setBounds(737, 310, 80, 40);

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(820, 310, 80, 40);

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/home.png"))); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(410, 310, 70, 70);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel13.setText("Merk Kendaraan");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(20, 380, 90, 30);

        jarak.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jarak" }));
        jarak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jarakActionPerformed(evt);
            }
        });
        getContentPane().add(jarak);
        jarak.setBounds(140, 420, 210, 30);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel12.setText("Merk Kendaraan");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(20, 380, 90, 30);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel15.setText("Harga");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(20, 460, 32, 30);
        getContentPane().add(harga_jarak);
        harga_jarak.setBounds(140, 460, 211, 30);

        jmlbayar.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jmlbayar.setText("Total :");
        getContentPane().add(jmlbayar);
        jmlbayar.setBounds(380, 480, 520, 80);
        getContentPane().add(harga_makan);
        harga_makan.setBounds(140, 500, 211, 30);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel16.setText("Harga Makanan");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(20, 500, 90, 30);
        getContentPane().add(qty);
        qty.setBounds(140, 540, 211, 30);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel17.setText("QTY");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(20, 540, 26, 30);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 690, 1040, 20);

        utilitas.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        utilitas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/delivery-man.png"))); // NOI18N
        utilitas.setText("Utilitas");
        utilitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilitasActionPerformed(evt);
            }
        });
        getContentPane().add(utilitas);
        utilitas.setBounds(370, 90, 110, 40);

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel19.setText("Input Utilitas");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(270, 100, 90, 14);

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Status Pesanan" }));
        status.setToolTipText("");
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });
        getContentPane().add(status);
        status.setBounds(140, 580, 210, 30);

        setSize(new java.awt.Dimension(921, 732));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    public void listMakanan(){

        try {
            String sql  = "SELECT * FROM master_makanan  ";
            java.sql.Connection conn = (Connection)koneksi.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
            
            while (rs.next()) {                
                listMakanan.addItem(rs.getString("nama_makanan"));
            }
        
           
        } catch (SQLException e) {
            
        }
        
    }
    
    public void listKendaraan(){

        try {
            String sql  = "SELECT * FROM master_kendaraan ";
            java.sql.Connection conn = (Connection)koneksi.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
            
            while (rs.next()) {                
                listKendaraan.addItem(rs.getString("merk_kendaraan"));
            }
        
           
        } catch (SQLException e) {
            
        }
        
    }
    
    public void listPengantar(){

        try {
            String sql  = "SELECT * FROM master_pengantar  ";
            java.sql.Connection conn = (Connection)koneksi.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
            
            while (rs.next()) {                
                listPengantar.addItem(rs.getString("nama"));
            }
        
           
        } catch (SQLException e) {
            
        }
        
    }
    
    public void listJarak(){
        try {
            String sql  = "SELECT * FROM form_biayakirim  ";
            java.sql.Connection conn = (Connection)koneksi.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
            
            while (rs.next()) {                
                jarak.addItem(rs.getString("jarak"));
            }
        
           
        } catch (SQLException e) {
            
        }
        
    }
    
    public void statusPesanan(){
        status.addItem("Dalam Pengiriman");
        status.addItem("Sudah Sampai");
    }
        
    private void listMakananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listMakananActionPerformed
        // TODO add your handling code here:
        String d = (String)  listMakanan.getSelectedItem();
         // JOptionPane.showMessageDialog(null,d);
          if(d == "Pilih Makanan"){
              harga_makan.setText("");
          }else {
//              JOptionPane.showMessageDialog(null,d);
                try {
                    String sql = "Select * from master_makanan where nama_makanan='"+ d +"' " ;
                    java.sql.Connection conn = (Connection)koneksi.configDB();
                    java.sql.Statement stm = conn.createStatement();
                    java.sql.ResultSet res = stm.executeQuery(sql);
                     while(res.next()){
                         harga_makan.setText(res.getString("harga_makanan"));
                     }
                }catch(Exception e){

                }
          }
       
    }//GEN-LAST:event_listMakananActionPerformed

    private void listKendaraanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listKendaraanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listKendaraanActionPerformed

    private void listPengantarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listPengantarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listPengantarActionPerformed

    public void idPesanan(){
        try {
            String sql  = "SELECT * FROM form_transaksi order by id_pesanan desc ";
            java.sql.Connection conn = (Connection)koneksi.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
            
            if(rs.next()){
                String nofak = rs.getString("id_pesanan").substring(1);
                String AN    = "" + (Integer.parseInt(nofak) + 1 );
                String nol   = "" ;
                
                if(AN.length() == 1){
                    nol = "000" ;
                }else if(AN.length() == 2){
                    nol = "00" ;
                }else if(AN.length() == 3){
                    nol = "0" ;
                }else if(AN.length() == 4){
                    nol = "" ;
                }
                idTransaksi.setText("F" + nol + AN);
            }else {
                idTransaksi.setText("F0001");
            }
        
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    public void reset(){
        idTransaksi.setText("");
        jmlbayar.setText("Total : ");
        nama.setText("");
        alamat.setText("");
        status.setSelectedItem("Status Pesanan");
        harga_makan.setText("");
        qty.setText("");
        harga_jarak.setText("");
        listMakanan.setSelectedItem("Pilih Makanan");
        listPengantar.setSelectedItem("Pilih Pengantar");
        listKendaraan.setSelectedItem("Pilih Kendaraan");
        jarak.setSelectedItem("Pilih Jarak");
        idPesanan();
        loadPesanan();
    }
    
    public void loadPesanan(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Pesanan");
        model.addColumn("Penerima");
        model.addColumn("Alamat");
        model.addColumn("Makanan");
        model.addColumn("Pengantar");
        model.addColumn("Kendaraan");
        model.addColumn("Status");
        
        //tampilkan data pesanan kedalam table 
        try {
            String sql = "Select * from form_transaksi order by id_pesanan asc " ;
            java.sql.Connection conn = (Connection)koneksi.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while(res.next()){
                model.addRow(new Object[] {res.getString(1) ,  res.getString(2) , res.getString(4) , res.getString(5)
                , res.getString(6) , res.getString(7) , res.getString(8) } );
            }
            pesanan.setModel(model);
        }catch(Exception e){
            
        }
    }
     private  String getTanggal() {  
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
        Date date = new Date();  
        return dateFormat.format(date);  
    }
     
     public String dateTime(){
        LocalDateTime myDateObj = LocalDateTime.now();
        DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
       // String formattedDate = myDateObj.format(myFormatObj);
        return myDateObj.format(myFormatObj) ;
    }
     
     public String Tgl2(){
        LocalDateTime myDateObj = LocalDateTime.now();
        DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd/MM/yy");
       // String formattedDate = myDateObj.format(myFormatObj);
        return myDateObj.format(myFormatObj) ;
     }
     
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        aksitrans tgl = new aksitrans();
        
        String tanggal    = tgl.getTanggal() ;
        String tgl_kirim  = tgl.dateTime();
        String TGL2       = tgl.Tgl2();
        String makanan    = (String) listMakanan.getSelectedItem();
        String pengantar  = (String) listPengantar.getSelectedItem();
        String kendaraan  = (String) listKendaraan.getSelectedItem();
        String jarak1     = (String) jarak.getSelectedItem();
        if(idTransaksi.getText().equals("")
                || nama.getText().equals("")
                || alamat.getText().equals("") 
                || listMakanan.getSelectedItem().equals("Pilih Makanan")
                || listPengantar.getSelectedItem().equals("Pilih Pengantar") 
                || listKendaraan.getSelectedItem().equals("Pilih Kendaraan")
                || jarak.getSelectedItem().equals("Pilih Jarak")
                || status.getSelectedItem().equals("")
                || harga_jarak.getText().equals("")
                || harga_makan.getText().equals("") ){
            JOptionPane.showMessageDialog(null,"field kosong");
        }else {
            try {
                int hasil = Integer.parseInt(harga_jarak.getText()) + Integer.parseInt(harga_makan.getText());
                String sql = "INSERT INTO  form_transaksi ("
                        + " id_pesanan , nama_penerima , alamat , "
                        + " nama_makanan , nama_pengantar , merk_kendaraan , status , tanggal  , "
                        + " hrgmakanan , jarak , biayakirim , qty , total  , tanggal_kirim  , tgl2  ) values "
                        + "('"+ idTransaksi.getText() +"' , '"+ nama.getText() +"' , '"+ alamat.getText() +"' , "
                        + "'"+ makanan +"' , '"+ pengantar +"' , '"+ kendaraan  +"' , '"+ status.getSelectedItem()  +"' "
                        + ", '"+ tanggal  +"' , '"+ harga_makan.getText()  +"'"
                        + ", '"+ jarak.getSelectedItem()  +"' ,"
                        + "  '"+ harga_jarak.getText()  +"'  , "
                        + "  '"+ qty.getText()  +"'  , "
                        + "  '"+  hasil  +"' ,  "  
                        + "  '"+  tgl_kirim  +"' ,  " 
                        + "  '"+  TGL2  + "' ) " ;
                  java.sql.Connection conn = (Connection)koneksi.configDB();
                  java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                  pst.execute();
                  JOptionPane.showMessageDialog(null,"Penyimpanan Berhasil");
                  reset();
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        
        
    }//GEN-LAST:event_saveActionPerformed

    private void pesananMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesananMouseClicked
        // TODO add your handling code here:
        int baris  = pesanan.rowAtPoint(evt.getPoint());
        String idPesanan = pesanan.getValueAt(baris,0).toString();
        idTransaksi.setText(idPesanan);
        try {
            String sql = "Select * from form_transaksi  where id_pesanan = '"+ idPesanan +"' " ;
            java.sql.Connection conn = (Connection)koneksi.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while(res.next()){
            int a = Integer.parseInt(res.getString("hrgmakanan"));
            int b = Integer.parseInt(res.getString("biayakirim"));
            int c = Integer.parseInt(res.getString("qty"));
            int hasil = (a * c) + b ;
                nama.setText(res.getString("nama_penerima"));
                alamat.setText(res.getString("alamat"));
                status.setSelectedItem(res.getString("status"));
                harga_jarak.setText(res.getString("biayakirim"));
                alamat.setText(res.getString("alamat"));
                harga_makan.setText(res.getString("hrgmakanan"));
                listMakanan.setSelectedItem(res.getString("nama_makanan"));
                listPengantar.setSelectedItem(res.getString("nama_pengantar"));
                listKendaraan.setSelectedItem(res.getString("merk_kendaraan"));
                jarak.setSelectedItem(res.getString("jarak"));
                qty.setText(res.getString("qty"));
                jmlbayar.setText("Total : Rp." + String.valueOf(hasil));
            }
        }catch(Exception e){
            
        }
        
        save.setEnabled(false);
        delete.setEnabled(true);
        update.setEnabled(true);
        reset.setEnabled(true);
        
        
    }//GEN-LAST:event_pesananMouseClicked

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        reset();
        save.setEnabled(true);
        delete.setEnabled(false);
        update.setEnabled(false);
        reset.setEnabled(false);
    }//GEN-LAST:event_resetActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int info = JOptionPane.showConfirmDialog(null, "Hapus Data ?");
        switch(info){
            case JOptionPane.YES_OPTION  :
                try {
                    String sql = "delete from form_transaksi where id_pesanan = '"+ idTransaksi.getText() +"' " ;
                    java.sql.Connection conn = (Connection)koneksi.configDB();
                    java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                    pst.execute();
                   JOptionPane.showMessageDialog(null, "data di hapus");
                   reset();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
               break ;
            default : 
                
             break ;
                
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        try {
            aksitrans tgl = new aksitrans(); 
            String tgl_sampai  = tgl.dateTime();
            int hasil = Integer.parseInt(harga_jarak.getText()) + 
                     ( Integer.parseInt(harga_makan.getText()) * Integer.parseInt(qty.getText()) );
            String sql = "update form_transaksi set "
                    + "nama_penerima = '"+ nama.getText() + "' , "
                    + "alamat = '"+ alamat.getText() +"' ,"
                    + "nama_makanan = '"+ listMakanan.getSelectedItem() +"' ,"
                    + "nama_pengantar = '"+ listPengantar.getSelectedItem() +"' ,"
                    + "merk_kendaraan = '"+ listKendaraan.getSelectedItem() +"' ,"
                    + "hrgmakanan = '"+ harga_makan.getText() +"' ,"
                    + "jarak = '"+ jarak.getSelectedItem() +"' ,"
                    + "biayakirim = '"+ harga_jarak.getText() +"' ,"
                    + "tanggal_sampai = '"+ tgl_sampai +"' ,"
                    + "total  = '"+ String.valueOf(hasil) +"' ,"
                    + "status = '"+ status.getSelectedItem() +"' "
                    + " where id_pesanan='"+ idTransaksi.getText() +"'  ";
                  java.sql.Connection conn = (Connection)koneksi.configDB();
                  java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                  pst.execute();
                  JOptionPane.showMessageDialog(null,"Data Di Update");
                  save.setEnabled(true);
                  update.setEnabled(false);
                  reset.setEnabled(false);
                  delete.setEnabled(false);
                  reset();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_updateActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
         this.dispose();
    }//GEN-LAST:event_backActionPerformed

       
    
    
    private void jarakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jarakActionPerformed
        // TODO add your handling code here:
        //tampilkan data pesanan kedalam table 
        String d = (String)  jarak.getSelectedItem();
         // JOptionPane.showMessageDialog(null,d);
          if(d == "Pilih Jarak"){
              harga_jarak.setText("");
          }else {
//              JOptionPane.showMessageDialog(null,d);
                try {
                    String sql = "Select * from form_biayakirim where jarak='"+ d +"' " ;
                    java.sql.Connection conn = (Connection)koneksi.configDB();
                    java.sql.Statement stm = conn.createStatement();
                    java.sql.ResultSet res = stm.executeQuery(sql);
                     while(res.next()){
                         harga_jarak.setText(res.getString(3));
                     }
                }catch(Exception e){

                }
          }

    }//GEN-LAST:event_jarakActionPerformed

    private void utilitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilitasActionPerformed
        // TODO add your handling code here:
        Master_utilitas a = new Master_utilitas();
        a.setVisible(true);
    }//GEN-LAST:event_utilitasActionPerformed

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:       
    }//GEN-LAST:event_statusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(aksitrans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(aksitrans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(aksitrans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(aksitrans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new aksitrans().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea alamat;
    private javax.swing.JButton back;
    private javax.swing.JButton delete;
    private javax.swing.JTextField harga_jarak;
    private javax.swing.JTextField harga_makan;
    private javax.swing.JTextField idTransaksi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jarak;
    private javax.swing.JLabel jmlbayar;
    private javax.swing.JComboBox<String> listKendaraan;
    private javax.swing.JComboBox<String> listMakanan;
    private javax.swing.JComboBox<String> listPengantar;
    private javax.swing.JTextField nama;
    private javax.swing.JTable pesanan;
    private javax.swing.JTextField qty;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JButton update;
    private javax.swing.JButton utilitas;
    // End of variables declaration//GEN-END:variables
}
